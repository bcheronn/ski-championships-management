@startmindmap "Ski Championships Management Mind Map"
* SCM
** Epreuve
** Création des données
*** Saisie des compétiteurs
@endmindmap

@startuml "Ski Championships Management Class Diagram"
hide empty members
caption Ski Championships Management\nClass Diagram
footer Bertrand C
header Last updated 15/10/2020
title Ski Championships\nManagement

namespace Scm {
    'note "This is a floating note\n<b>in case I need it</b>" as N1

    class Event
    {
        -id: int
        -location: string
        -startDate: DateTime
        -endDate: DateTime0
        +create(): Event
        +update()
        +delete(): bool
        +{static}list(): Event[]
        +export(): bool
        +import(): bool
    }

    class Competitor
    {
        -id: int
        -lastName: string
        -firstName: string
        -birthDate: DateTime
        -email: string
        -photo: resource
        +create(): Competitor
        +update()
        +delete(): bool
        +{static}list(): Competitor[]
    }

    class Run
    {
        -id: int
        -number: int
        -time: float
        --
        ..Getters and setters..
        +getId()
        ..Other methods..
        +create(): Run
        +delete(): bool
    }

    class Result
    {
        -id: int
        -time: string
        +create(): Result
        +delete(): bool
        +{static}list(): Result[]
    }

    abstract Metadata
    {
        #id: int
        #name: string
        #description: string
        #create()
        #update()
        #delete(): bool
        #list(): Metadata
    }

    class Category
    {
    }

    class Profile
    {
    }

    (Event, Competitor) "1" *.. "1" Result : obtains
    Event "1" *-- "0..n" Competitor : < takes part
    (Event, Competitor) "1" *.. "0..2" Run : runs
    Metadata <|-l- Category
    Metadata <|-r- Profile
    Competitor "1..n" o-- "1" Category : belongs to >
    Competitor "1..n" o-- "1" Profile : has >
}
@enduml